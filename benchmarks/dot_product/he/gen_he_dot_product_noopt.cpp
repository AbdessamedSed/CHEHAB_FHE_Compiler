#include <cstddef>
#include <cstdint>
#include <utility>
#include "gen_he_dot_product_noopt.hpp"

using namespace std;
using namespace seal;

void dot_product_noopt(const unordered_map<string, Ciphertext> &encrypted_inputs,
const unordered_map<string, Plaintext> &encoded_inputs,
unordered_map<string, Ciphertext> &encrypted_outputs,
unordered_map<string, Plaintext> &encoded_outputs,
const BatchEncoder &encoder,
const Encryptor &encryptor,
const Evaluator &evaluator,
const RelinKeys &relin_keys,
const GaloisKeys &galois_keys)
{
Plaintext p2 = encoded_inputs.at("v1");
Ciphertext c1 = encrypted_inputs.at("c0");
size_t slot_count = encoder.slot_count();
Plaintext p4;
encoder.encode(vector<std::int64_t>(slot_count, 0), p4);
Ciphertext c5;
encryptor.encrypt(p4, c5);
evaluator.multiply_plain(c1, p2, c1);
Ciphertext c6;
evaluator.rotate_rows(c1, 0, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 2, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 3, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 4, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 5, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 6, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 7, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 8, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 9, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 10, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 11, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 12, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 13, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 14, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 15, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 16, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 17, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 18, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 19, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 20, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 21, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 22, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 23, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 24, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 25, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 26, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 27, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 28, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 29, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 30, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 31, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 32, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 33, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 34, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 35, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 36, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 37, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 38, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 39, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 40, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 41, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 42, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 43, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 44, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 45, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 46, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 47, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 48, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 49, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 50, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 51, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 52, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 53, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 54, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 55, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 56, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 57, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 58, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 59, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 60, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 61, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 62, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 63, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 64, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 65, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 66, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 67, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 68, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 69, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 70, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 71, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 72, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 73, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 74, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 75, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 76, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 77, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 78, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 79, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 80, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 81, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 82, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 83, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 84, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 85, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 86, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 87, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 88, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 89, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 90, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 91, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 92, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 93, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 94, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 95, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 96, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 97, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 98, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 99, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 100, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 101, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 102, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 103, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 104, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 105, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 106, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 107, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 108, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 109, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 110, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 111, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 112, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 113, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 114, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 115, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 116, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 117, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 118, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 119, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 120, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 121, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 122, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 123, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 124, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 125, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 126, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 127, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 128, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 129, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 130, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 131, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 132, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 133, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 134, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 135, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 136, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 137, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 138, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 139, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 140, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 141, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 142, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 143, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 144, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 145, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 146, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 147, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 148, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 149, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 150, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 151, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 152, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 153, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 154, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 155, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 156, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 157, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 158, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 159, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 160, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 161, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 162, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 163, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 164, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 165, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 166, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 167, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 168, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 169, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 170, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 171, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 172, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 173, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 174, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 175, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 176, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 177, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 178, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 179, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 180, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 181, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 182, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 183, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 184, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 185, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 186, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 187, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 188, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 189, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 190, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 191, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 192, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 193, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 194, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 195, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 196, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 197, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 198, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 199, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 200, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 201, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 202, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 203, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 204, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 205, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 206, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 207, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 208, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 209, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 210, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 211, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 212, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 213, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 214, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 215, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 216, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 217, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 218, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 219, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 220, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 221, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 222, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 223, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 224, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 225, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 226, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 227, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 228, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 229, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 230, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 231, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 232, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 233, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 234, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 235, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 236, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 237, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 238, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 239, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 240, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 241, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 242, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 243, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 244, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 245, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 246, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 247, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 248, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 249, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 250, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 251, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 252, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 253, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 254, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 255, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 256, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 257, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 258, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 259, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 260, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 261, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 262, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 263, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 264, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 265, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 266, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 267, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 268, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 269, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 270, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 271, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 272, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 273, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 274, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 275, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 276, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 277, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 278, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 279, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 280, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 281, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 282, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 283, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 284, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 285, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 286, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 287, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 288, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 289, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 290, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 291, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 292, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 293, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 294, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 295, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 296, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 297, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 298, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 299, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 300, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 301, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 302, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 303, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 304, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 305, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 306, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 307, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 308, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 309, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 310, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 311, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 312, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 313, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 314, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 315, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 316, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 317, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 318, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 319, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 320, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 321, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 322, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 323, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 324, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 325, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 326, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 327, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 328, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 329, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 330, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 331, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 332, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 333, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 334, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 335, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 336, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 337, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 338, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 339, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 340, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 341, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 342, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 343, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 344, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 345, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 346, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 347, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 348, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 349, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 350, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 351, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 352, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 353, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 354, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 355, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 356, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 357, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 358, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 359, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 360, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 361, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 362, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 363, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 364, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 365, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 366, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 367, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 368, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 369, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 370, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 371, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 372, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 373, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 374, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 375, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 376, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 377, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 378, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 379, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 380, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 381, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 382, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 383, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 384, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 385, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 386, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 387, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 388, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 389, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 390, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 391, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 392, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 393, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 394, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 395, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 396, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 397, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 398, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 399, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 400, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 401, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 402, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 403, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 404, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 405, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 406, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 407, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 408, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 409, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 410, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 411, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 412, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 413, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 414, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 415, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 416, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 417, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 418, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 419, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 420, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 421, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 422, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 423, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 424, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 425, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 426, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 427, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 428, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 429, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 430, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 431, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 432, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 433, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 434, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 435, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 436, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 437, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 438, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 439, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 440, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 441, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 442, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 443, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 444, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 445, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 446, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 447, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 448, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 449, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 450, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 451, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 452, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 453, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 454, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 455, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 456, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 457, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 458, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 459, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 460, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 461, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 462, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 463, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 464, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 465, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 466, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 467, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 468, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 469, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 470, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 471, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 472, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 473, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 474, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 475, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 476, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 477, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 478, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 479, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 480, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 481, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 482, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 483, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 484, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 485, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 486, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 487, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 488, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 489, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 490, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 491, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 492, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 493, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 494, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 495, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 496, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 497, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 498, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 499, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 500, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 501, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 502, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 503, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 504, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 505, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 506, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 507, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 508, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 509, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 510, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 511, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 512, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 513, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 514, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 515, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 516, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 517, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 518, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 519, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 520, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 521, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 522, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 523, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 524, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 525, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 526, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 527, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 528, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 529, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 530, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 531, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 532, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 533, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 534, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 535, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 536, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 537, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 538, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 539, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 540, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 541, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 542, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 543, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 544, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 545, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 546, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 547, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 548, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 549, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 550, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 551, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 552, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 553, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 554, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 555, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 556, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 557, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 558, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 559, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 560, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 561, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 562, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 563, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 564, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 565, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 566, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 567, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 568, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 569, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 570, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 571, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 572, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 573, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 574, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 575, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 576, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 577, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 578, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 579, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 580, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 581, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 582, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 583, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 584, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 585, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 586, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 587, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 588, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 589, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 590, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 591, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 592, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 593, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 594, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 595, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 596, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 597, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 598, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 599, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 600, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 601, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 602, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 603, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 604, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 605, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 606, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 607, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 608, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 609, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 610, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 611, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 612, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 613, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 614, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 615, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 616, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 617, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 618, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 619, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 620, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 621, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 622, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 623, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 624, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 625, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 626, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 627, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 628, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 629, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 630, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 631, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 632, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 633, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 634, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 635, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 636, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 637, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 638, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 639, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 640, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 641, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 642, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 643, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 644, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 645, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 646, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 647, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 648, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 649, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 650, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 651, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 652, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 653, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 654, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 655, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 656, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 657, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 658, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 659, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 660, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 661, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 662, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 663, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 664, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 665, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 666, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 667, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 668, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 669, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 670, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 671, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 672, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 673, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 674, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 675, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 676, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 677, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 678, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 679, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 680, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 681, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 682, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 683, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 684, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 685, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 686, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 687, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 688, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 689, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 690, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 691, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 692, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 693, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 694, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 695, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 696, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 697, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 698, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 699, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 700, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 701, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 702, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 703, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 704, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 705, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 706, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 707, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 708, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 709, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 710, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 711, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 712, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 713, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 714, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 715, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 716, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 717, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 718, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 719, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 720, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 721, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 722, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 723, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 724, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 725, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 726, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 727, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 728, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 729, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 730, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 731, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 732, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 733, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 734, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 735, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 736, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 737, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 738, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 739, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 740, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 741, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 742, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 743, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 744, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 745, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 746, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 747, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 748, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 749, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 750, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 751, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 752, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 753, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 754, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 755, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 756, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 757, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 758, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 759, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 760, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 761, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 762, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 763, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 764, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 765, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 766, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 767, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 768, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 769, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 770, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 771, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 772, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 773, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 774, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 775, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 776, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 777, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 778, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 779, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 780, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 781, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 782, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 783, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 784, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 785, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 786, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 787, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 788, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 789, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 790, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 791, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 792, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 793, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 794, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 795, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 796, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 797, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 798, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 799, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 800, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 801, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 802, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 803, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 804, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 805, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 806, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 807, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 808, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 809, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 810, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 811, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 812, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 813, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 814, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 815, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 816, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 817, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 818, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 819, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 820, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 821, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 822, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 823, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 824, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 825, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 826, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 827, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 828, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 829, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 830, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 831, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 832, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 833, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 834, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 835, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 836, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 837, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 838, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 839, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 840, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 841, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 842, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 843, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 844, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 845, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 846, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 847, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 848, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 849, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 850, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 851, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 852, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 853, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 854, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 855, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 856, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 857, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 858, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 859, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 860, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 861, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 862, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 863, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 864, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 865, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 866, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 867, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 868, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 869, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 870, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 871, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 872, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 873, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 874, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 875, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 876, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 877, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 878, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 879, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 880, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 881, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 882, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 883, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 884, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 885, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 886, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 887, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 888, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 889, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 890, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 891, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 892, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 893, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 894, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 895, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 896, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 897, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 898, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 899, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 900, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 901, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 902, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 903, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 904, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 905, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 906, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 907, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 908, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 909, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 910, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 911, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 912, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 913, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 914, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 915, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 916, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 917, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 918, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 919, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 920, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 921, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 922, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 923, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 924, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 925, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 926, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 927, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 928, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 929, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 930, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 931, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 932, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 933, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 934, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 935, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 936, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 937, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 938, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 939, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 940, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 941, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 942, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 943, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 944, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 945, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 946, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 947, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 948, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 949, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 950, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 951, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 952, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 953, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 954, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 955, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 956, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 957, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 958, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 959, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 960, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 961, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 962, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 963, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 964, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 965, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 966, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 967, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 968, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 969, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 970, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 971, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 972, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 973, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 974, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 975, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 976, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 977, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 978, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 979, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 980, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 981, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 982, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 983, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 984, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 985, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 986, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 987, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 988, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 989, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 990, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 991, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 992, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 993, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 994, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 995, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 996, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 997, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 998, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 999, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1000, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1001, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1002, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1003, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1004, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1005, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1006, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1007, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1008, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1009, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1010, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1011, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1012, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1013, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1014, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1015, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1016, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1017, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1018, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1019, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1020, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1021, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1022, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c1, 1023, galois_keys, c1);
evaluator.add(c5, c1, c5);
encrypted_outputs.emplace("result", move(c5));
}

vector<int> get_rotation_steps_dot_product_noopt(){
return vector<int>{540, 539, 538, 537, 536, 535, 534, 533, 532, 531, 530, 529, 528, 527, 526, 525,
524, 523, 522, 521, 520, 519, 518, 517, 516, 515, 514, 513, 512, 511, 510, 509,
508, 507, 506, 505, 504, 503, 502, 501, 500, 499, 498, 497, 496, 495, 494, 493,
492, 491, 490, 489, 488, 487, 486, 485, 484, 483, 482, 481, 480, 479, 478, 477,
476, 475, 474, 473, 472, 471, 470, 469, 468, 467, 466, 465, 464, 463, 462, 461,
460, 459, 458, 457, 456, 455, 454, 453, 452, 451, 450, 449, 448, 447, 446, 445,
444, 443, 442, 441, 440, 439, 438, 437, 436, 435, 434, 433, 432, 431, 430, 429,
428, 427, 426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 413,
412, 411, 410, 409, 408, 407, 406, 405, 404, 403, 402, 401, 400, 399, 398, 397,
396, 395, 394, 393, 392, 391, 390, 389, 388, 387, 386, 385, 384, 383, 382, 381,
380, 379, 378, 377, 376, 375, 374, 373, 372, 371, 370, 369, 368, 367, 366, 365,
364, 363, 362, 361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 351, 350, 349,
348, 347, 346, 345, 344, 343, 342, 341, 340, 339, 338, 337, 336, 335, 334, 333,
332, 331, 330, 329, 328, 327, 326, 325, 324, 323, 322, 321, 320, 319, 318, 317,
316, 315, 314, 313, 312, 311, 310, 309, 308, 307, 306, 305, 304, 303, 302, 301,
300, 299, 298, 297, 296, 295, 294, 293, 292, 291, 290, 289, 288, 287, 286, 285,
284, 283, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 272, 271, 270, 269,
268, 267, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 126, 125, 124, 123,
122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107,
106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91,
90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75,
74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59,
28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13,
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 29, 30, 31,
32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 127, 128, 129, 130, 131,
132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
196, 197, 198, 767, 226, 768, 227, 769, 228, 770, 229, 771, 230, 772, 231, 773,
232, 774, 233, 775, 234, 776, 235, 777, 236, 778, 237, 779, 238, 780, 239, 781,
240, 782, 241, 783, 242, 784, 243, 785, 244, 786, 245, 787, 246, 788, 247, 789,
248, 790, 249, 791, 250, 792, 251, 793, 252, 794, 253, 795, 254, 796, 255, 797,
256, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812,
813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828,
829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892,
893, 894, 895, 896, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
993, 994, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1010,
1009, 1008, 1007, 1006, 1005, 1004, 1003, 1002, 1001, 1000, 999, 998, 997, 996, 995, 964,
963, 962, 961, 960, 959, 958, 957, 956, 955, 954, 953, 952, 951, 950, 949, 948,
947, 946, 945, 944, 943, 942, 941, 940, 939, 938, 937, 936, 935, 934, 933, 932,
931, 930, 929, 928, 927, 926, 925, 924, 923, 922, 921, 920, 919, 918, 917, 916,
915, 914, 913, 912, 911, 910, 909, 908, 907, 906, 905, 904, 903, 902, 901, 900,
899, 898, 897, 766, 225, 765, 224, 764, 223, 763, 222, 762, 221, 761, 220, 760,
219, 759, 218, 758, 217, 757, 216, 756, 215, 755, 214, 754, 213, 753, 212, 752,
211, 751, 210, 750, 209, 749, 208, 748, 207, 747, 206, 746, 205, 745, 204, 744,
203, 743, 202, 742, 201, 741, 200, 740, 199, 739, 738, 737, 736, 735, 734, 733,
732, 731, 730, 729, 728, 727, 726, 725, 724, 723, 722, 721, 720, 719, 718, 717,
716, 715, 714, 713, 712, 711, 710, 709, 708, 707, 706, 705, 704, 703, 702, 701,
700, 699, 698, 697, 696, 695, 694, 693, 692, 691, 690, 689, 688, 687, 686, 685,
684, 683, 682, 681, 680, 679, 678, 677, 676, 675, 674, 673, 672, 671, 670, 669,
668, 667, 666, 665, 664, 663, 662, 661, 660, 659, 658, 657, 656, 655, 654, 653,
652, 651, 650, 649, 648, 647, 646, 645, 644, 643, 642, 641, 640, 639, 638, 637,
636, 635, 634, 633, 632, 631, 630, 629, 628, 627, 626, 625, 624, 623, 622, 621,
620, 619, 618, 617, 616, 615, 614, 613, 612, 611, 610, 609, 608, 607, 606, 605,
604, 603, 602, 601, 600, 599, 598, 597, 596, 595, 594, 593, 592, 591, 590, 589,
588, 587, 586, 585, 584, 583, 582, 581, 580, 579, 578, 577, 576, 575, 574, 573,
572, 571, 570, 569, 568, 567, 566, 565, 564, 563, 562, 561, 560, 559, 558, 557,
556, 555, 554, 553, 552, 551, 550, 549, 548, 547, 546, 545, 544, 543, 542, 541};
}
