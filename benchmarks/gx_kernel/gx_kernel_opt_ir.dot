digraph "gx_kernel" {
node [shape=circle width=1 margin=0]
edge [dir=back]
1 [label="1" style=solid]
ciphertext0 [label="c0" style=dashed color=blue fontcolor=blue]
2 [label="2" style=solid]
ciphertext23 [label="rotate" style=dashed]
ciphertext23 -> ciphertext0
ciphertext23 -> 2
ciphertext24 [label="+" style=dashed]
ciphertext24 -> ciphertext23
ciphertext24 -> ciphertext0
ciphertext26 [label="+" style=dashed]
ciphertext26 -> ciphertext24
ciphertext26 -> ciphertext24
ciphertext45 [label="rotate" style=dashed]
ciphertext45 -> ciphertext26
ciphertext45 -> 1
5 [label="5" style=solid]
ciphertext30 [label="rotate" style=dashed]
ciphertext30 -> ciphertext0
ciphertext30 -> 1
ciphertext31 [label="+" style=dashed]
ciphertext31 -> ciphertext0
ciphertext31 -> ciphertext30
ciphertext40 [label="rotate" style=dashed]
ciphertext40 -> ciphertext31
ciphertext40 -> 5
4 [label="4" style=solid]
ciphertext35 [label="rotate" style=dashed]
ciphertext35 -> ciphertext0
ciphertext35 -> 4
ciphertext36 [label="+" style=dashed]
ciphertext36 -> ciphertext0
ciphertext36 -> ciphertext35
ciphertext41 [label="+" style=dashed]
ciphertext41 -> ciphertext36
ciphertext41 -> ciphertext40
ciphertext46 [label="+" style=dashed]
ciphertext46 -> ciphertext41
ciphertext46 -> ciphertext45
ciphertext12 [label="rotate" style=dashed]
ciphertext12 -> ciphertext46
ciphertext12 -> 1
ciphertext14 [label="=" style=dashed color=red fontcolor=red]
ciphertext14 -> ciphertext12
subgraph cluster_key {
    graph[label="Key"]
    node [width=0.5]
    edge [dir=forward style=invis]
    in_cipher [label=input color=blue fontcolor=blue style=dashed]
    tmp_cipher [label=tmp color=black fontcolor=black style=dashed]
    out_cipher [label=out color=red fontcolor=red style=dashed]
    cipher [shape=plain]

    in_plain [label=in icolor=blue fontcolor=blue style=dotted]
    tmp_plain [label=tmp color=black fontcolor=black style=dotted]
    out_plain [label=out color=red fontcolor=red style=dotted]
    plain [shape=plain]
    
    other [color=black fontcolor=black style=solid]
    scalar [color=darkgreen fontcolor=darkgreen style=solid]
    const[shape=plain]
    
    cipher -> plain
    plain -> const
    out_cipher -> out_plain
    in_cipher -> in_plain
    tmp_cipher -> tmp_plain
    in_plain -> other
    out_plain -> scalar
}
}
