digraph "gx_kernel" {
node [shape=circle width=1 margin=0]
edge [dir=back]
33 [label="33" style=solid]
ciphertext0 [label="img" style=dashed color=blue fontcolor=blue]
1022 [label="1022" style=solid]
ciphertext35 [label="rotate" style=dashed]
ciphertext35 -> ciphertext0
ciphertext35 -> 1022
ciphertext36 [label="-" style=dashed]
ciphertext36 -> ciphertext35
ciphertext36 -> ciphertext0
ciphertext13 [label="rotate" style=dashed]
ciphertext13 -> ciphertext36
ciphertext13 -> 33
1 [label="1" style=solid]
ciphertext8 [label="rotate" style=dashed]
ciphertext8 -> ciphertext0
ciphertext8 -> 1
scalar1 [label="scalar1" style=solid color=darkgreen fontcolor=darkgreen]
ciphertext9 [label="*" style=dashed]
ciphertext9 -> scalar1
ciphertext9 -> ciphertext8
1023 [label="1023" style=solid]
ciphertext6 [label="rotate" style=dashed]
ciphertext6 -> ciphertext0
ciphertext6 -> 1023
ciphertext7 [label="*" style=dashed]
ciphertext7 -> scalar1
ciphertext7 -> ciphertext6
ciphertext10 [label="-" style=dashed]
ciphertext10 -> ciphertext7
ciphertext10 -> ciphertext9
993 [label="993" style=solid]
ciphertext5 [label="rotate" style=dashed]
ciphertext5 -> ciphertext36
ciphertext5 -> 993
ciphertext14 [label="+" style=dashed]
ciphertext14 -> ciphertext5
ciphertext14 -> ciphertext10
ciphertext15 [label="+" style=dashed color=red fontcolor=red]
ciphertext15 -> ciphertext14
ciphertext15 -> ciphertext13
subgraph cluster_key {
    graph[label="Key"]
    node [width=0.5]
    edge [dir=forward style=invis]
    in_cipher [label=input color=blue fontcolor=blue style=dashed]
    tmp_cipher [label=tmp color=black fontcolor=black style=dashed]
    out_cipher [label=out color=red fontcolor=red style=dashed]
    cipher [shape=plain]

    in_plain [label=in icolor=blue fontcolor=blue style=dotted]
    tmp_plain [label=tmp color=black fontcolor=black style=dotted]
    out_plain [label=out color=red fontcolor=red style=dotted]
    plain [shape=plain]
    
    other [color=black fontcolor=black style=solid]
    scalar [color=darkgreen fontcolor=darkgreen style=solid]
    const[shape=plain]
    
    cipher -> plain
    plain -> const
    out_cipher -> out_plain
    in_cipher -> in_plain
    tmp_cipher -> tmp_plain
    in_plain -> other
    out_plain -> scalar
}
}
