#include <cstddef>
#include <cstdint>
#include <utility>
#include "gen_he_l2_distance_noopt.hpp"

using namespace std;
using namespace seal;

void l2_distance_noopt(const unordered_map<string, Ciphertext> &encrypted_inputs,
const unordered_map<string, Plaintext> &encoded_inputs,
unordered_map<string, Ciphertext> &encrypted_outputs,
unordered_map<string, Plaintext> &encoded_outputs,
const BatchEncoder &encoder,
const Encryptor &encryptor,
const Evaluator &evaluator,
const RelinKeys &relin_keys,
const GaloisKeys &galois_keys)
{
Ciphertext c2 = encrypted_inputs.at("c2");
Ciphertext c1 = encrypted_inputs.at("c1");
size_t slot_count = encoder.slot_count();
Plaintext p6;
encoder.encode(vector<std::int64_t>(slot_count, 0), p6);
Ciphertext c7;
encryptor.encrypt(p6, c7);
Ciphertext c3;
evaluator.sub(c1, c2, c3);
evaluator.sub(c1, c2, c1);
evaluator.multiply(c3, c1, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 0, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 2, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 3, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 4, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 5, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 6, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 7, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 8, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 9, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 10, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 11, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 12, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 13, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 14, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 15, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 16, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 17, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 18, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 19, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 20, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 21, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 22, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 23, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 24, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 25, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 26, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 27, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 28, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 29, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 30, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 31, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 32, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 33, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 34, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 35, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 36, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 37, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 38, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 39, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 40, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 41, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 42, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 43, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 44, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 45, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 46, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 47, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 48, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 49, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 50, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 51, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 52, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 53, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 54, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 55, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 56, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 57, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 58, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 59, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 60, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 61, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 62, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 63, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 64, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 65, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 66, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 67, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 68, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 69, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 70, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 71, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 72, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 73, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 74, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 75, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 76, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 77, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 78, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 79, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 80, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 81, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 82, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 83, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 84, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 85, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 86, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 87, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 88, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 89, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 90, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 91, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 92, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 93, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 94, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 95, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 96, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 97, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 98, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 99, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 100, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 101, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 102, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 103, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 104, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 105, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 106, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 107, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 108, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 109, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 110, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 111, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 112, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 113, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 114, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 115, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 116, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 117, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 118, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 119, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 120, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 121, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 122, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 123, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 124, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 125, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 126, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 127, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 128, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 129, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 130, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 131, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 132, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 133, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 134, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 135, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 136, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 137, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 138, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 139, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 140, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 141, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 142, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 143, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 144, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 145, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 146, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 147, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 148, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 149, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 150, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 151, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 152, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 153, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 154, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 155, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 156, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 157, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 158, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 159, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 160, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 161, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 162, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 163, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 164, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 165, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 166, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 167, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 168, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 169, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 170, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 171, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 172, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 173, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 174, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 175, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 176, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 177, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 178, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 179, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 180, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 181, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 182, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 183, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 184, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 185, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 186, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 187, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 188, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 189, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 190, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 191, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 192, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 193, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 194, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 195, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 196, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 197, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 198, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 199, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 200, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 201, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 202, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 203, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 204, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 205, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 206, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 207, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 208, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 209, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 210, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 211, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 212, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 213, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 214, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 215, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 216, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 217, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 218, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 219, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 220, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 221, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 222, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 223, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 224, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 225, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 226, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 227, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 228, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 229, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 230, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 231, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 232, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 233, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 234, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 235, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 236, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 237, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 238, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 239, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 240, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 241, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 242, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 243, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 244, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 245, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 246, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 247, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 248, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 249, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 250, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 251, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 252, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 253, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 254, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 255, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 256, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 257, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 258, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 259, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 260, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 261, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 262, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 263, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 264, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 265, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 266, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 267, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 268, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 269, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 270, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 271, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 272, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 273, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 274, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 275, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 276, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 277, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 278, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 279, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 280, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 281, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 282, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 283, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 284, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 285, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 286, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 287, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 288, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 289, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 290, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 291, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 292, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 293, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 294, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 295, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 296, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 297, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 298, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 299, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 300, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 301, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 302, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 303, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 304, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 305, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 306, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 307, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 308, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 309, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 310, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 311, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 312, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 313, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 314, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 315, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 316, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 317, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 318, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 319, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 320, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 321, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 322, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 323, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 324, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 325, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 326, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 327, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 328, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 329, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 330, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 331, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 332, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 333, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 334, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 335, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 336, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 337, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 338, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 339, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 340, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 341, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 342, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 343, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 344, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 345, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 346, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 347, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 348, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 349, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 350, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 351, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 352, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 353, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 354, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 355, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 356, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 357, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 358, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 359, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 360, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 361, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 362, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 363, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 364, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 365, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 366, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 367, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 368, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 369, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 370, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 371, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 372, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 373, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 374, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 375, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 376, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 377, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 378, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 379, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 380, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 381, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 382, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 383, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 384, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 385, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 386, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 387, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 388, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 389, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 390, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 391, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 392, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 393, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 394, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 395, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 396, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 397, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 398, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 399, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 400, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 401, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 402, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 403, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 404, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 405, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 406, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 407, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 408, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 409, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 410, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 411, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 412, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 413, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 414, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 415, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 416, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 417, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 418, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 419, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 420, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 421, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 422, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 423, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 424, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 425, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 426, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 427, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 428, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 429, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 430, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 431, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 432, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 433, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 434, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 435, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 436, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 437, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 438, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 439, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 440, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 441, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 442, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 443, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 444, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 445, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 446, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 447, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 448, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 449, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 450, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 451, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 452, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 453, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 454, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 455, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 456, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 457, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 458, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 459, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 460, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 461, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 462, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 463, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 464, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 465, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 466, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 467, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 468, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 469, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 470, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 471, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 472, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 473, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 474, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 475, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 476, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 477, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 478, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 479, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 480, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 481, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 482, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 483, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 484, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 485, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 486, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 487, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 488, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 489, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 490, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 491, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 492, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 493, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 494, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 495, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 496, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 497, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 498, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 499, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 500, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 501, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 502, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 503, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 504, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 505, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 506, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 507, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 508, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 509, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 510, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 511, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 512, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 513, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 514, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 515, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 516, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 517, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 518, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 519, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 520, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 521, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 522, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 523, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 524, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 525, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 526, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 527, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 528, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 529, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 530, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 531, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 532, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 533, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 534, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 535, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 536, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 537, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 538, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 539, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 540, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 541, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 542, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 543, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 544, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 545, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 546, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 547, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 548, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 549, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 550, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 551, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 552, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 553, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 554, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 555, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 556, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 557, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 558, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 559, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 560, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 561, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 562, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 563, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 564, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 565, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 566, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 567, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 568, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 569, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 570, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 571, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 572, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 573, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 574, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 575, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 576, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 577, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 578, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 579, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 580, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 581, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 582, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 583, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 584, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 585, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 586, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 587, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 588, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 589, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 590, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 591, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 592, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 593, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 594, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 595, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 596, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 597, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 598, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 599, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 600, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 601, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 602, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 603, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 604, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 605, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 606, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 607, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 608, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 609, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 610, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 611, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 612, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 613, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 614, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 615, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 616, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 617, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 618, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 619, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 620, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 621, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 622, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 623, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 624, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 625, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 626, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 627, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 628, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 629, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 630, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 631, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 632, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 633, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 634, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 635, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 636, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 637, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 638, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 639, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 640, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 641, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 642, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 643, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 644, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 645, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 646, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 647, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 648, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 649, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 650, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 651, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 652, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 653, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 654, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 655, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 656, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 657, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 658, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 659, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 660, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 661, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 662, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 663, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 664, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 665, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 666, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 667, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 668, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 669, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 670, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 671, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 672, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 673, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 674, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 675, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 676, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 677, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 678, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 679, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 680, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 681, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 682, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 683, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 684, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 685, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 686, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 687, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 688, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 689, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 690, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 691, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 692, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 693, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 694, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 695, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 696, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 697, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 698, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 699, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 700, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 701, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 702, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 703, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 704, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 705, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 706, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 707, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 708, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 709, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 710, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 711, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 712, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 713, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 714, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 715, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 716, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 717, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 718, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 719, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 720, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 721, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 722, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 723, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 724, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 725, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 726, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 727, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 728, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 729, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 730, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 731, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 732, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 733, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 734, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 735, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 736, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 737, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 738, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 739, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 740, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 741, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 742, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 743, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 744, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 745, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 746, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 747, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 748, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 749, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 750, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 751, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 752, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 753, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 754, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 755, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 756, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 757, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 758, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 759, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 760, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 761, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 762, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 763, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 764, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 765, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 766, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 767, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 768, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 769, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 770, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 771, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 772, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 773, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 774, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 775, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 776, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 777, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 778, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 779, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 780, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 781, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 782, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 783, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 784, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 785, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 786, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 787, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 788, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 789, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 790, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 791, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 792, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 793, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 794, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 795, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 796, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 797, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 798, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 799, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 800, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 801, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 802, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 803, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 804, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 805, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 806, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 807, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 808, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 809, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 810, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 811, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 812, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 813, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 814, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 815, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 816, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 817, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 818, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 819, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 820, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 821, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 822, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 823, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 824, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 825, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 826, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 827, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 828, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 829, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 830, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 831, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 832, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 833, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 834, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 835, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 836, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 837, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 838, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 839, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 840, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 841, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 842, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 843, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 844, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 845, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 846, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 847, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 848, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 849, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 850, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 851, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 852, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 853, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 854, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 855, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 856, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 857, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 858, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 859, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 860, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 861, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 862, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 863, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 864, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 865, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 866, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 867, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 868, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 869, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 870, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 871, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 872, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 873, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 874, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 875, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 876, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 877, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 878, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 879, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 880, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 881, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 882, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 883, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 884, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 885, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 886, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 887, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 888, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 889, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 890, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 891, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 892, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 893, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 894, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 895, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 896, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 897, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 898, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 899, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 900, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 901, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 902, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 903, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 904, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 905, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 906, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 907, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 908, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 909, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 910, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 911, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 912, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 913, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 914, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 915, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 916, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 917, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 918, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 919, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 920, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 921, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 922, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 923, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 924, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 925, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 926, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 927, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 928, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 929, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 930, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 931, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 932, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 933, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 934, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 935, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 936, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 937, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 938, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 939, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 940, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 941, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 942, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 943, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 944, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 945, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 946, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 947, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 948, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 949, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 950, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 951, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 952, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 953, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 954, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 955, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 956, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 957, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 958, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 959, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 960, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 961, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 962, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 963, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 964, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 965, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 966, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 967, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 968, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 969, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 970, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 971, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 972, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 973, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 974, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 975, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 976, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 977, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 978, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 979, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 980, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 981, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 982, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 983, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 984, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 985, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 986, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 987, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 988, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 989, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 990, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 991, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 992, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 993, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 994, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 995, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 996, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 997, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 998, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 999, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1000, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1001, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1002, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1003, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1004, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1005, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1006, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1007, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1008, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1009, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1010, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1011, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1012, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1013, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1014, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1015, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1016, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1017, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1018, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1019, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1020, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1021, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1022, galois_keys, c1);
evaluator.add(c7, c1, c7);
evaluator.rotate_rows(c3, 1023, galois_keys, c3);
evaluator.add(c7, c3, c7);
encrypted_outputs.emplace("result", move(c7));
}

vector<int> get_rotation_steps_l2_distance_noopt(){
return vector<int>{540, 539, 538, 537, 536, 535, 534, 533, 532, 531, 530, 529, 528, 527, 526, 525,
524, 523, 522, 521, 520, 519, 518, 517, 516, 515, 514, 513, 512, 511, 510, 509,
508, 507, 506, 505, 504, 503, 502, 501, 500, 499, 498, 497, 496, 495, 494, 493,
492, 491, 490, 489, 488, 487, 486, 485, 484, 483, 482, 481, 480, 479, 478, 477,
476, 475, 474, 473, 472, 471, 470, 469, 468, 467, 466, 465, 464, 463, 462, 461,
460, 459, 458, 457, 456, 455, 454, 453, 452, 451, 450, 449, 448, 447, 446, 445,
444, 443, 442, 441, 440, 439, 438, 437, 436, 435, 434, 433, 432, 431, 430, 429,
428, 427, 426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 413,
412, 411, 410, 409, 408, 407, 406, 405, 404, 403, 402, 401, 400, 399, 398, 397,
396, 395, 394, 393, 392, 391, 390, 389, 388, 387, 386, 385, 384, 383, 382, 381,
380, 379, 378, 377, 376, 375, 374, 373, 372, 371, 370, 369, 368, 367, 366, 365,
364, 363, 362, 361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 351, 350, 349,
348, 347, 346, 345, 344, 343, 342, 341, 340, 339, 338, 337, 336, 335, 334, 333,
332, 331, 330, 329, 328, 327, 326, 325, 324, 323, 322, 321, 320, 319, 318, 317,
316, 315, 314, 313, 312, 311, 310, 309, 308, 307, 306, 305, 304, 303, 302, 301,
300, 299, 298, 297, 296, 295, 294, 293, 292, 291, 290, 289, 288, 287, 286, 285,
284, 283, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 272, 271, 270, 269,
268, 267, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 126, 125, 124, 123,
122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107,
106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91,
90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75,
74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59,
28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13,
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 29, 30, 31,
32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 127, 128, 129, 130, 131,
132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
196, 197, 198, 767, 226, 768, 227, 769, 228, 770, 229, 771, 230, 772, 231, 773,
232, 774, 233, 775, 234, 776, 235, 777, 236, 778, 237, 779, 238, 780, 239, 781,
240, 782, 241, 783, 242, 784, 243, 785, 244, 786, 245, 787, 246, 788, 247, 789,
248, 790, 249, 791, 250, 792, 251, 793, 252, 794, 253, 795, 254, 796, 255, 797,
256, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812,
813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828,
829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892,
893, 894, 895, 896, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
993, 994, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1010,
1009, 1008, 1007, 1006, 1005, 1004, 1003, 1002, 1001, 1000, 999, 998, 997, 996, 995, 964,
963, 962, 961, 960, 959, 958, 957, 956, 955, 954, 953, 952, 951, 950, 949, 948,
947, 946, 945, 944, 943, 942, 941, 940, 939, 938, 937, 936, 935, 934, 933, 932,
931, 930, 929, 928, 927, 926, 925, 924, 923, 922, 921, 920, 919, 918, 917, 916,
915, 914, 913, 912, 911, 910, 909, 908, 907, 906, 905, 904, 903, 902, 901, 900,
899, 898, 897, 766, 225, 765, 224, 764, 223, 763, 222, 762, 221, 761, 220, 760,
219, 759, 218, 758, 217, 757, 216, 756, 215, 755, 214, 754, 213, 753, 212, 752,
211, 751, 210, 750, 209, 749, 208, 748, 207, 747, 206, 746, 205, 745, 204, 744,
203, 743, 202, 742, 201, 741, 200, 740, 199, 739, 738, 737, 736, 735, 734, 733,
732, 731, 730, 729, 728, 727, 726, 725, 724, 723, 722, 721, 720, 719, 718, 717,
716, 715, 714, 713, 712, 711, 710, 709, 708, 707, 706, 705, 704, 703, 702, 701,
700, 699, 698, 697, 696, 695, 694, 693, 692, 691, 690, 689, 688, 687, 686, 685,
684, 683, 682, 681, 680, 679, 678, 677, 676, 675, 674, 673, 672, 671, 670, 669,
668, 667, 666, 665, 664, 663, 662, 661, 660, 659, 658, 657, 656, 655, 654, 653,
652, 651, 650, 649, 648, 647, 646, 645, 644, 643, 642, 641, 640, 639, 638, 637,
636, 635, 634, 633, 632, 631, 630, 629, 628, 627, 626, 625, 624, 623, 622, 621,
620, 619, 618, 617, 616, 615, 614, 613, 612, 611, 610, 609, 608, 607, 606, 605,
604, 603, 602, 601, 600, 599, 598, 597, 596, 595, 594, 593, 592, 591, 590, 589,
588, 587, 586, 585, 584, 583, 582, 581, 580, 579, 578, 577, 576, 575, 574, 573,
572, 571, 570, 569, 568, 567, 566, 565, 564, 563, 562, 561, 560, 559, 558, 557,
556, 555, 554, 553, 552, 551, 550, 549, 548, 547, 546, 545, 544, 543, 542, 541};
}
